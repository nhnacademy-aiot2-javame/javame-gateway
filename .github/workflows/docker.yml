name: CI/CD for Spring Boot with Docker

on:
  push:
    branches:
      - main
  
   
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      SERVICE_NAME: javame-gateway

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK environment
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # Build the Spring Boot application
      - name: Build with Maven
        run: mvn clean package -DskipTests
     

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

 
      # 도커 이미지 생성 후 Hub에 등록
      - name: Build & Push Docker Image
        run: |
            IMAGE_TAG=${{ github.sha }}
            docker build -t ygw1026/javame-gateway:$IMAGE_TAG .
            docker push ygw1026/javame-gateway:$IMAGE_TAG
            echo "GATEWAY_IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      # Deploy the application using Docker-Compose
      - name: Deploy to Remote Server via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
            host: ${{ secrets.SSH_IP }}
            username: ${{ secrets.SSH_ID }}
            port: 8822
            key: ${{ secrets.SSH_KEY }}
            script: |
              COMPOSE_DIR="/home/aiot2/aiot2-team3/docker/javame"
              cd $COMPOSE_DIR
              
                  # ① .env에 방금 빌드한 이미지 태그 기록
              if grep -q '^GATEWAY_IMAGE_TAG=' .env; then
               # 있으면 교체
              sed -i "s|^GATEWAY_IMAGE_TAG=.*|GATEWAY_IMAGE_TAG=${{ env.GATEWAY_IMAGE_TAG }}|" .env
              else
              # 없으면 추가
              echo "GATEWAY_IMAGE_TAG=${{ env.GATEWAY_IMAGE_TAG }}" >> .env
              fi
              
              SERVICE_NAME=javame-gateway
              docker-compose stop $SERVICE_NAME
              docker-compose rm -f $SERVICE_NAME
              docker-compose up -d $SERVICE_NAME
            
